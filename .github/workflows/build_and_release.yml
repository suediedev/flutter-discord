name: Build and Release

on:
  push:
    branches:
      - '*'

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build APK
        run: |
          flutter build apk --release
          
      - name: Upload Android Build
        uses: actions/upload-artifact@v2
        with:
          name: android-builds
          path: build/app/outputs/flutter-apk/app-release.apk
          
      - name: Release Android Build
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/app/outputs/flutter-apk/app-release.apk

  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build iOS App
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload
          zip -r app.ipa Payload
      
      - name: Upload iOS Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: build/ios/iphoneos/app.ipa

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          cache: true
      
      - name: Enable macOS Desktop
        run: flutter config --enable-macos-desktop
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build macOS App
        run: flutter build macos --release
      
      - name: Install create-dmg
        run: brew install create-dmg
      
      - name: Create DMG
        run: |
          APP_NAME="Gavnnat v2"
          DMG_NAME="Gavnnat_v2"
          APP_PATH="build/macos/Build/Products/Release/$APP_NAME.app"
          DMG_PATH="build/macos/Build/Products/Release/$DMG_NAME.dmg"
          
          # Ensure the app exists
          if [ ! -d "$APP_PATH" ]; then
            echo "Error: App not found at $APP_PATH"
            ls -la build/macos/Build/Products/Release/
            exit 1
          fi
          
          # Create DMG
          create-dmg \
            --volname "$APP_NAME" \
            --volicon "icon.png" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "$APP_NAME.app" 200 190 \
            --hide-extension "$APP_NAME.app" \
            --app-drop-link 600 185 \
            "$DMG_PATH" \
            "$APP_PATH"
      
      - name: Upload macOS Build
        uses: actions/upload-artifact@v2
        with:
          name: macos-build
          path: build/macos/Build/Products/Release/Gavnnat_v2.dmg
          
      - name: Release macOS Build
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/macos/Build/Products/Release/Gavnnat_v2.dmg

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          cache: true
      
      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop
      
      - name: Install dependencies
        run: flutter pub get
        
      - name: Install create-self-signed-cert tool
        run: dotnet tool install --global dotnet-create-self-signed-cert
        
      - name: Create certificate
        run: create-self-signed-cert -n "CatdroutCoded"
        
      - name: Build MSIX package
        run: |
          flutter pub add --dev msix
          flutter pub run msix:create
        
      - name: Upload Windows Build
        uses: actions/upload-artifact@v2
        with:
          name: windows-msix
          path: build/windows/runner/Release/gavnnat_v2.msix
          
      - name: Release Windows Build
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/windows/runner/Release/gavnnat_v2.msix

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          cache: true
      
      - name: Enable Linux Desktop
        run: flutter config --enable-linux-desktop
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Linux App
        run: flutter build linux --release
      
      - name: Create TAR
        run: |
          cd build/linux/x64/release/bundle
          tar -czf linux-release.tar.gz *
      
      - name: Upload Linux Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: build/linux/x64/release/bundle/linux-release.tar.gz

  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Web
        run: flutter build web --release
      
      - name: Upload Web Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web

  create-release:
    needs: [android, build-ios, build-macos, build-windows, build-linux, build-web]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            android-builds/*
            ios-build/*
            macos-build/*
            windows-msix/*
            linux-build/*
            web-build/*
          draft: false
          prerelease: false
