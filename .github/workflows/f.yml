name: "Build"

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'

jobs:  
  build:      
    name: Build & Release 
    runs-on: macos-latest 

    steps:
        #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

        #2 Cache Flutter SDK
      - name: Cache Flutter SDK
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
        
        #3 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '20'

        #4 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'

        #5 Cache Flutter Dependencies
      - name: Cache Flutter Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-
        #6 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

        #7 Setup Keystore
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties
        #8 Building APK
      - name: Build APK
        run: flutter build apk --release

        #9 Building App Bundle (aab)
      - name: Build appBundle
        run: flutter build appbundle

        #10 Build IPA ( IOS Build )
      - name: Build IPA
        run: flutter build ipa --release --no-codesign

        #11 Upload APK Artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

        #12 Upload App Bundle Artifact
      - name: Upload App Bundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.aab
          path: build/app/outputs/bundle/release/app-release.aab

        #13 Upload IPA Artifact (Optional)
      - name: Upload IPA Artifact
        if: always() # Only if IPA exists
        uses: actions/upload-artifact@v4
        with:
          name: ios_build
          path: build/ios/archive/Runner.xcarchive


